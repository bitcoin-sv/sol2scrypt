
contract Return {

    public function unlock() {

        require(true);
    }

    // test return in if
    function test0(int amount) : int {
        int ret = 0;
        bool returned = false;
        int x = 3;
        if (x == 0) {
            x++;
            {
                ret = x;
                returned = true;
            }
        }

        if (!returned) {
            x = x + amount;
        }
        return !returned ? x : ret;
    }

    // test return both in if and else
    function test1(int amount) : int {
        int ret = 0;
        bool returned = false;
        int x = 3;
        if (x == 13) {
            {
                ret = x;
                returned = true;
            }
        }
        else {
            {
                ret = x++;
                returned = true;
            }
        }

        return ret;
    }

    // test return in nested if
    function test2(int amount) : int {
        int ret = 0;
        bool returned = false;
        int x = 3;
        if (x > 0) {
            if (x == 3) {
                {
                    ret = x;
                    returned = true;
                }
            }
            if (!returned) {
                x++;
            }
        }
        else {
            {
                ret = x;
                returned = true;
            }
        }

        if (!returned) {
            x = x + amount;
        }

        return returned ? ret : x;
    }

    function test3(int amount, int y) : int {
        int ret = 0;
        bool returned = false;
        int x = 3;
        if (x > 0) {
            if (x > 1) {
                x /= 2;
                if (x == 2) {
                    {
                        ret = x;
                        returned = true;
                    }
                }

                if (!returned) {
                    x--;
                    if (x == 3) {
                        {
                            ret = x;
                            returned = true;
                        }
                    }
                    else {
                        x += y;
                    }
                    if (!returned) {
                        x += 2 * amount + 1;
                    }
                }
            }
            if (!returned) {
                x++;
                x += 11;
            }
        }
        else {

            --x;
        }

        if (!returned) {
            x = x + amount;
            x += 20 / amount - 12;
        }

        return returned ? ret : x;
    }

    // return only in else
    function test4(int amount, int y) : int {
        int ret = 0;
        bool returned = false;
        int x = 3;
        if (x > 0) {
            x++;
        }
        else {
            --x;
            {
                ret = x;
                returned = true;
            }
        }

        if (!returned) {
            x = x + amount;
            x += 20 / amount - 12;
        }

        return returned ? ret : x;
    }

    function test5(int amount, int y) : int {
        int ret = 0;
        bool returned = false;
        int x = 3;
        if (x > 0) {
            x++;
            if (x == 3) {
                {
                    ret = x;
                    returned = true;
                }
            }
            else if (x == 5) {
                x++;
            }
            else if (x == 2) {
                x--;
            }
            if (!returned) {
                x += 3;
            }
        }
        else {
            --x;
        }

        if (!returned) {
            x = x + amount;
            x += 20 / amount - 12;
        }

        return returned ? ret : x;
    }

    // test return no in a block
    function test6(int x) : bool {
        bool ret = false;
        bool returned = false;
        if (x == 0) {
            ret = true;
            returned = true;
        }

        return returned ? ret : false;
    }

    // test return no in a block
    function test7(int x) : bytes {
        bytes ret = b'';
        bool returned = false;
        if (x == 0) {
            if (x > 1) {
                if (x > 9) {
                    {
                        ret = b'ff00000000000001';
                        returned = true;
                    }
                }
                if (!returned) {
                    {
                        ret = b'ff00000000000002';
                        returned = true;
                    }
                }
            }
            if (!returned) {
                {
                    ret = b'ff00000000000003';
                    returned = true;
                }
            }
        }

        return returned ? ret : b'ff00000000000004';
    }

    //  no return at the end.
    function test8(int x) : int {
        int ret = 0;
        bool returned = false;
        int y = 1;
        if (x == 0) {
            if (x > 1) {
                if (x > 9) {
                    {
                        ret = ((x * x + y) > x * y) ? x-- : ((y * x) - 9);
                        returned = true;
                    }
                }
                else {
                    x = x * 9 - y + (x * y / 100);
                }

                if (!returned) {
                    ret = (x-- - 200) * y;
                    returned = true;
                }
            }
            if (!returned) {
                ret = x - 9;
                returned = true;
            }
        }
        if (!returned) {
            ret = x++;
            returned = true;
        }

        return ret;
    }
}
