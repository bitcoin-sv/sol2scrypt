
contract Return {

  
    public function unlock(){
        
        require(true);
    }

    function test_(int amount) : int {
        int ret = 0;
        bool returned = false;
        int x = 3;
        if(x == 0) {
            if(!returned) {
                ret = 3;
                returned = true;
            }
        }

        x = x + amount;
        return !returned ? x : ret;
    }


    function test( int amount): int {
        int ret = 0;
        bool returned = false;
        int x = 3;
        if(x == 0) {
            if(!returned) {
                ret = x;
                returned = true;
            }
        }

        x = x + amount;
        return !returned ? x : ret;
    }

    function test1( int amount) : int {
        int ret = 0;
        bool returned = false;
        int x = 3;
        if(x == 0) {
            if(!returned) {
                ret = x;
                returned = true;
            }
        } else {
            if(!returned) {
                ret = x++;
                returned = true;
            }
        }

        x = x + amount;

        return !returned ? x : ret;
    }

    function test2(int amount) : int {
        int ret = 0;
        bool returned = false;
        int x = 3;
        if(x > 0) {
            if(x == 3) {
                if(!returned) {
                    ret = x;
                    returned = true;
                }
            }
            x++;
        } else {
            if(!returned) {
                ret = x;
                returned = true;
            }
        }

        x = x + amount;
        return !returned ? x : ret;
    }

    function test3(int amount) : int {
        int ret = 0;
        bool returned = false;
        int x = 3;
        if(x > 1) {
            if(x == 3) {
                if(!returned) {
                    ret = x;
                    returned = true;
                }
            }
            x++;
        } else {
            if(x == 0) {
                if(!returned) {
                    ret = x;
                    returned = true;
                }
            }
            x++;
        }

        x = x + amount;
        return !returned ? x : ret;
    }

}